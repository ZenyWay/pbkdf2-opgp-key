(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var getPbkdf2OpgpKeyFactory=require("../src").default,mock,getPbkdf2,opgpkey,digest,creds;beforeEach(function(){opgpkey={handle:"key-handle"},digest={value:"digest",spec:{}};var e=jasmine.createSpy("pbkdf2").and.returnValue(Promise.resolve(digest)),t=jasmine.createSpy("getkdf").and.returnValue(e),n=jasmine.createSpy("generateKey").and.returnValue(Promise.resolve(opgpkey)),o=jasmine.createSpy("unlock");mock={getkdf:t,pbkdf2:e,opgp:{generateKey:n,unlock:o}},creds={user:"j.doe@test.org",passphrase:"secret passphrase"}}),describe("getPbkdf2OpgpKeyFactory (opgp: OpgpService, config?: Partial<Pbdkf2OpgpKeyConfig>): Pbdkf2OpgpKeyFactory",function(){it("returns a function",function(){expect(getPbkdf2OpgpKeyFactory(mock.opgp)).toEqual(jasmine.any(Function))}),describe("when called with an OpgpService instance",function(){beforeEach(function(e){var t=getPbkdf2OpgpKeyFactory(mock.opgp,{getkdf:mock.getkdf});t(creds).then(function(e){return e.unlock(creds.passphrase)}).then(function(){return setTimeout(e)}).catch(function(t){return setTimeout(function(){return e.fail(t)})})}),it("configures the returned function with that instance and default settings",function(){expect(mock.opgp.generateKey).toHaveBeenCalled(),expect(mock.opgp.unlock).toHaveBeenCalled(),expect(mock.getkdf).toHaveBeenCalledWith({}),expect(mock.opgp.generateKey).toHaveBeenCalledWith(creds.user,jasmine.objectContaining({passphrase:digest.value,size:2048,unlocked:!0}))})}),describe("when called with an OpgpService instance and a Pbdkf2OpgpKeyConfig instance { size?: number, locked?: boolean, pbkdf2?: Partial<Pbkdf2Sha512Config> }",function(){var e;beforeEach(function(t){e={size:4096,locked:!0,pbkdf2:{},getkdf:mock.getkdf};var n=getPbkdf2OpgpKeyFactory(mock.opgp,e);n(creds).then(function(){return setTimeout(t)}).catch(function(e){return setTimeout(function(){return t.fail(e)})})}),it("configures the returned function accordingly",function(){expect(mock.getkdf).toHaveBeenCalledWith(e.pbkdf2),expect(mock.opgp.generateKey).toHaveBeenCalledWith(creds.user,jasmine.objectContaining({passphrase:digest.value,size:e.size,unlocked:!e.locked}))})}),describe("when called with anything else than a valid OpgpService instance",function(){var e,t;beforeEach(function(){e=[null,void 0,!0,42,"foo",function(){return"foo"},["foo"],{foo:"bar"}],t=function(e){return function(){return getPbkdf2OpgpKeyFactory(e,{getkdf:mock.getkdf})}}}),it('throws an "invalid argument" TypeError',function(){e.every(function(e){return expect(t(e)).toThrowError(TypeError,"invalid argument")}),expect(mock.opgp.generateKey).not.toHaveBeenCalled(),expect(mock.opgp.unlock).not.toHaveBeenCalled(),expect(mock.getkdf).not.toHaveBeenCalled(),expect(mock.opgp.generateKey).not.toHaveBeenCalled()})})}),describe("getPbkdf2OpgpKey (creds: Credentials): Promise<Pbkdf2OpgpKey>",function(){var e;beforeEach(function(){e=getPbkdf2OpgpKeyFactory(mock.opgp,{getkdf:mock.getkdf})}),describe("when called with a Credentials object: { user: string, passphrase: string }",function(){var t;beforeEach(function(n){e(creds).then(function(e){return t=e}).then(function(){return setTimeout(n)}).catch(function(e){return setTimeout(function(){return n.fail(e)})})}),it("returns a Pbkdf2OpgpKey object:  { key: OpgpProxyKey, pbkdf2: Pbkdf2Sha512Config, unlock: (passphrase: string) => Promise<Pbkdf2OpgpKey>",function(){expect(t).toEqual({key:opgpkey,pbkdf2:digest.spec,unlock:jasmine.any(Function)})})}),describe("when called with anything else",function(){var t,n;beforeEach(function(o){t=[null,void 0,!0,42,"foo",function(){return"foo"},["foo"],{user:42,passphrase:"passphrase"},{user:"j.doe@test.org",passphrase:42}],Promise.all(t.map(function(t){return e(t).catch(function(e){return e})})).then(function(e){return n=e}).then(function(){return setTimeout(o)}).catch(function(e){return setTimeout(function(){return o.fail(e)})})}),it('throws an "invalid credentials" TypeError',function(){expect(n.length).toBe(t.length),n.every(function(e){return expect(e).toEqual(jasmine.any(TypeError))&&expect(e.message).toBe("invalid credentials")})})})}),describe("Pbkdf2OpgpKey.unlock (passphrase: string): Promise<Pbkdf2OpgpKey>",function(){var e;beforeEach(function(t){var n=getPbkdf2OpgpKeyFactory(mock.opgp,{getkdf:mock.getkdf});n(creds).then(function(t){return e=t}).then(function(){return setTimeout(t)}).catch(function(e){return setTimeout(function(){return t.fail(e)})})}),describe("when called with the correct passphrase string",function(){var t;beforeEach(function(n){mock.opgp.unlock.and.returnValue(Promise.resolve(opgpkey)),e.unlock(creds.passphrase).then(function(e){return t=e}).then(function(){return setTimeout(n)}).catch(function(e){return setTimeout(function(){return n.fail(e)})})}),it("returns the unlocked key",function(){expect(mock.opgp.unlock).toHaveBeenCalledWith(opgpkey,digest.value),expect(t).toEqual({key:opgpkey,pbkdf2:digest.spec,unlock:jasmine.any(Function)})})}),describe("when called with any other string than the correct passphrase",function(){var t;beforeEach(function(n){mock.opgp.unlock.and.returnValue(Promise.reject(new TypeError("boom"))),e.unlock(creds.passphrase).catch(function(e){return t=e}).then(function(){return setTimeout(n)}).catch(function(e){return setTimeout(function(){return n.fail(e)})})}),it("rejects with the error thrown by the underlying OpgpService#unlock method",function(){expect(t).toEqual(jasmine.any(TypeError)),expect(t.message).toBe("boom")})}),describe("when called with anything else than a string",function(){var t,n;beforeEach(function(o){t=[null,void 0,!0,42,function(){return"foo"},["foo"],{foo:"bar"}],Promise.all(t.map(function(t){return e.unlock(t).catch(function(e){return e})})).then(function(e){return n=e}).then(function(){return setTimeout(o)}).catch(function(e){return setTimeout(function(){return o.fail(e)})})}),it('rejects with an "invalid argument" TypeError',function(){expect(n.length).toBe(t.length),expect(mock.opgp.unlock).not.toHaveBeenCalled(),n.every(function(e){return expect(e).toEqual(jasmine.any(TypeError))&&expect(e.message).toBe("invalid argument")})})})});
},{"../src":2}],2:[function(require,module,exports){
"use strict";function isValidOpgpService(e){return!!e&&["generateKey","unlock"].every(function(t){return utils_1.isFunction(e[t])})}function isValidCredentials(e){return!!e&&utils_1.isString(e.user)&&utils_1.isString(e.passphrase)}var utils_1=require("./utils"),tslib_1=require("tslib"),KEY_SIZE_DEFAULT=2048,getPbkdf2OpgpKeyFactory=function(e,t){if(!isValidOpgpService(e))throw new TypeError("invalid argument");var n=tslib_1.__assign({},{size:KEY_SIZE_DEFAULT},t),r=utils_1.isFunction(n.getkdf)?n.getkdf:require("pbkdf2sha512").default,i=tslib_1.__assign({},n.pbkdf2),s=n.size,u=!n.locked;return function(t){return isValidCredentials(t)?Pbkdf2OpgpKeyClass.getInstance(e,r,i,s,u,t):Promise.reject(new TypeError("invalid argument"))}},Pbkdf2OpgpKeyClass=function(){function e(e,t,n,r){this.getPbkdf2=e,this.opgp=t,this.key=n,this.pbkdf2=r}return e.getInstance=function(t,n,r,i,s,u){var o=n(r),a=o(u.passphrase).then(function(r){var o=r.value,a=r.spec;return Promise.resolve(t.generateKey(u.user,{passphrase:o,size:i,unlocked:s})).then(function(r){return new e(n,t,r,a)})});return e.wrapInstance(a)},e.prototype.unlock=function(t){var n=this,r=this.getPbkdf2(this.pbkdf2);return r(t).then(function(e){return Promise.resolve(n.opgp.unlock(n.key,e.value))}).then(function(t){return new e(n.getPbkdf2,n.opgp,t,n.pbkdf2)})},e.wrapInstance=function(t){return t.then(function(t){return{key:t.key,pbkdf2:t.pbkdf2,unlock:function(n){return utils_1.isString(n)?e.wrapInstance(t.unlock(n)):Promise.reject(new TypeError("invalid argument"))}}})},e}();Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getPbkdf2OpgpKeyFactory;
},{"./utils":3,"pbkdf2sha512":undefined,"tslib":undefined}],3:[function(require,module,exports){
"use strict";function isString(n){return"string"==typeof(n&&n.valueOf())}function isFunction(n){return"function"==typeof n}exports.isString=isString,exports.isFunction=isFunction;
},{}]},{},[1]);
